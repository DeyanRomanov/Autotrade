# Generated by Django 3.2.12 on 2022-04-14 10:37

import autotrade.products.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutotradeCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Марка')),
                ('model', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Модел')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(2)], verbose_name='Изберете снимка до 2мб')),
                ('year', models.DateField(validators=[autotrade.products.validators.validate_future_date], verbose_name='Година на производство')),
                ('price', models.CharField(default='В очакване на цена', max_length=18)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('fuel', models.CharField(choices=[('Дизел', 'Дизел'), ('Бензин', 'Бензин'), ('Електрически', 'Електрически'), ('Хибрид', 'Хибрид'), ('Газ', 'Газ')], max_length=12, verbose_name='Гориво')),
                ('motor', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(7000), django.core.validators.MinValueValidator(800)], verbose_name='Обем на двигател')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutotradeMotorcycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Марка')),
                ('model', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Модел')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(2)], verbose_name='Изберете снимка до 2мб')),
                ('year', models.DateField(validators=[autotrade.products.validators.validate_future_date], verbose_name='Година на производство')),
                ('price', models.CharField(default='В очакване на цена', max_length=18)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('motor_type', models.CharField(blank=True, choices=[('Кросов', 'Кросов'), ('Пистов', 'Пистов'), ('Чопър', 'Чопър')], max_length=6, null=True, verbose_name='Тип на мотора (незадължително поле)')),
                ('cooling', models.CharField(blank=True, choices=[('Въздушно', 'Въздушно'), ('Водно', 'Водно')], max_length=8, null=True, verbose_name='Вид охлаждане (незадължително поле)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutotradePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=33, verbose_name='Наименование')),
                ('parts_category', models.CharField(choices=[('Двигател', 'Двигател'), ('Скорости', 'Скорости'), ('КУПЕ', 'КУПЕ'), ('Други', 'Други')], max_length=8, verbose_name='Категория')),
                ('condition', models.CharField(choices=[('Ново', 'Ново'), ('Използвано', 'Използвано'), ('Разопаковано', 'Разопаковано')], max_length=12, verbose_name='Състояние')),
                ('catalog_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='Каталожен номер')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(1)], verbose_name='Изберете снимка до 1мб')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutotradeTruck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Марка')),
                ('model', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Модел')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(2)], verbose_name='Изберете снимка до 2мб')),
                ('year', models.DateField(validators=[autotrade.products.validators.validate_future_date], verbose_name='Година на производство')),
                ('price', models.CharField(default='В очакване на цена', max_length=18)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('total_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общо тегло')),
                ('capacity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Товароносимост')),
                ('category', models.CharField(blank=True, choices=[('Ван', 'Ван'), ('Специален', 'Специален'), ('Строителна техника', 'Строителна техника')], max_length=18, null=True, verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Марка')),
                ('model', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Модел')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(2)], verbose_name='Изберете снимка до 2мб')),
                ('year', models.DateField(validators=[autotrade.products.validators.validate_future_date], verbose_name='Година на производство')),
                ('price', models.CharField(default='В очакване на цена', max_length=18)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('fuel', models.CharField(choices=[('Дизел', 'Дизел'), ('Бензин', 'Бензин'), ('Електрически', 'Електрически'), ('Хибрид', 'Хибрид'), ('Газ', 'Газ')], max_length=12, verbose_name='Гориво')),
                ('motor', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(7000), django.core.validators.MinValueValidator(800)], verbose_name='Обем на двигател')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Motorcycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Марка')),
                ('model', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Модел')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(2)], verbose_name='Изберете снимка до 2мб')),
                ('year', models.DateField(validators=[autotrade.products.validators.validate_future_date], verbose_name='Година на производство')),
                ('price', models.CharField(default='В очакване на цена', max_length=18)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('motor_type', models.CharField(blank=True, choices=[('Кросов', 'Кросов'), ('Пистов', 'Пистов'), ('Чопър', 'Чопър')], max_length=6, null=True, verbose_name='Тип на мотора (незадължително поле)')),
                ('cooling', models.CharField(blank=True, choices=[('Въздушно', 'Въздушно'), ('Водно', 'Водно')], max_length=8, null=True, verbose_name='Вид охлаждане (незадължително поле)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=33, verbose_name='Наименование')),
                ('parts_category', models.CharField(choices=[('Двигател', 'Двигател'), ('Скорости', 'Скорости'), ('КУПЕ', 'КУПЕ'), ('Други', 'Други')], max_length=8, verbose_name='Категория')),
                ('condition', models.CharField(choices=[('Ново', 'Ново'), ('Използвано', 'Използвано'), ('Разопаковано', 'Разопаковано')], max_length=12, verbose_name='Състояние')),
                ('catalog_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='Каталожен номер')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(1)], verbose_name='Изберете снимка до 1мб')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Марка')),
                ('model', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Модел')),
                ('image', models.ImageField(upload_to='', validators=[autotrade.products.validators.MaxFileSizeInMbValidator(2)], verbose_name='Изберете снимка до 2мб')),
                ('year', models.DateField(validators=[autotrade.products.validators.validate_future_date], verbose_name='Година на производство')),
                ('price', models.CharField(default='В очакване на цена', max_length=18)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('total_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общо тегло')),
                ('capacity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Товароносимост')),
                ('category', models.CharField(blank=True, choices=[('Ван', 'Ван'), ('Специален', 'Специален'), ('Строителна техника', 'Строителна техника')], max_length=18, null=True, verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
